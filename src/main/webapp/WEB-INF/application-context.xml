<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
  xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.springframework.org/schema/aop
                            http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
                            http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
                            http://www.springframework.org/schema/context
                            http://www.springframework.org/schema/context/spring-context-4.1.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd">

        <!--
                This will automatically locate any and all property files you have
                within your classpath, provided they fall under the META-INF
                directory. The located property files are parsed and their values can
                then be used within application context files in the form of
                ${propertyKey}.
        -->
        <context:property-placeholder location="classpath*:*.properties" />
        
        <bean id="dataSimple" class="uk.co.andyfennell.service.DataSimple"/>
        
<!--         
        <bean id="controller" class="uk.co.andyfennell.controller.ApplicationController">
          <property name="dataService" ref="dataSimple"/>
        </bean>
-->        


<tx:annotation-driven transaction-manager="txManager"/>

<bean id="txManager"
    class="org.springframework.orm.hibernate4.HibernateTransactionManager">
    <property name="sessionFactory" ref="sessionFactory" />
</bean>

<tx:advice id="txAdvice" transaction-manager="txManager">
    <tx:attributes>
        <tx:method name="get*" read-only="true" />
        <tx:method name="*" />
<!-- 
        <tx:method name="add*"/>       
        <tx:method name="fetch*" read-only="true" />
-->               
    </tx:attributes>
</tx:advice>

<!-- Instead of using aop can use @Transaction annotation -->
<!-- 
<aop:config>
    <aop:pointcut id="eventServiceMethods"
        expression="execution(* uk.co.andyfennell.service.*.*(..))" />
    <aop:advisor advice-ref="txAdvice" pointcut-ref="eventServiceMethods" />
</aop:config>
-->


<bean id="eventService"
class="uk.co.andyfennell.service.EventServiceImpl">
<property name="eventDao" ref="eventDao" />
</bean>


<bean id="eventDao"
class="uk.co.andyfennell.model.hibernate.domain.EventDao">
<property name="hibernateTemplate" ref="hibernateTemplate" />
</bean>

<bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
<property name="sessionFactory" ref="sessionFactory"/>
</bean>

<bean id="sessionFactory"
class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
<property name="dataSource" ref="dataSource" />
<property name="mappingResources">
<list>
<value>uk/co/andyfennell/hibernate/domain/Event.hbm.xml</value>
</list>
</property>
<property name="hibernateProperties">
<props>
<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
<!-- <prop key="hibernate.current_session_context_class">thread</prop> -->
<prop key="hibernate.show_sql">true</prop>
</props>
</property>
</bean>

<!-- Commented out as using JNDI -->
<!-- 
<bean id="dataSource"
class="org.springframework.jdbc.datasource.DriverManagerDataSource">
<property name="driverClassName" value="com.mysql.jdbc.Driver" />
<property name="url" value="jdbc:mysql://localhost:3306/test" />
<property name="username" value="admin" />
<property name="password" value="adminmysql" />
</bean>
-->
<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
  <!-- access -->
  <property name="driverClass" value="com.mysql.jdbc.Driver" />
  <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/test" />
  <property name="user" value="admin" />
  <property name="password" value="adminmysql" />
  <!-- pool sizing -->
  <property name="initialPoolSize" value="1" />
  <property name="minPoolSize" value="1" />
  <property name="maxPoolSize" value="25" />
  <property name="acquireIncrement" value="3" />
  <property name="maxStatements" value="0" />
  <!-- retries -->
  <property name="acquireRetryAttempts" value="30" />
  <property name="acquireRetryDelay" value="1000" /> <!-- 1s -->
  <property name="breakAfterAcquireFailure" value="false" />
  <!-- refreshing connections -->
  <property name="maxIdleTime" value="180" /> <!-- 3min -->
  <property name="maxConnectionAge" value="1800" /> <!-- 30min -->
  <!-- timeouts and testing -->
  <property name="checkoutTimeout" value="5000" /> <!-- 5s -->
  <property name="idleConnectionTestPeriod" value="60" /> <!-- 60 -->
  <property name="testConnectionOnCheckout" value="true" />
  <property name="preferredTestQuery" value="SELECT 1" />
        <property name="testConnectionOnCheckin" value="true" />
<!--         
  <property name="privilegeSpawnedThreads" value="true"/>        
  <property name="contextClassLoaderSource" value="library"/>
-->  
</bean>

<!-- 
<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
  <property name="jndiName" value="java:comp/env/jdbc/test"/>
</bean>
-->     
        
</beans>